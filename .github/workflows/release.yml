name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow}}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out git repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up pnpm 8.x
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Set up Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --ignore-scripts --frozen-lockfile

      # output of the action used below is named 'files_exists', see: https://github.com/andstor/file-existence-action
      - name: Check if in Prerelease Mode
        id: is_in_prerelease_mode
        uses: andstor/file-existence-action@v3
        with:
          files: '.changeset/pre.json'
      # This step itself does not exit prerelease mode, but rather will "set an intent" to exit prerelease mode in 'pre.json' (see: https://github.com/changesets/changesets/blob/main/docs/prereleases.md)
      # As a result, when the subsequent use of changesets/action@v1 (in a step below) runs 'changeset version', prerelease mode will be exited and versioning/release will proceed as normal.
      - name: Prepare to Exit Prerelease Mode if Needed
        if: steps.is_in_prerelease_mode.outputs.files_exists == 'true'
        run: pnpm exec changeset pre exit
      - name: Create release pull request or publish to NPM
        uses: changesets/action@v1
        with:
          publish: pnpm exec changeset publish
          commit: 'chore: version packages'
          title: 'Version and publish packages'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Get current branch
        run: echo "CURRENT_BRANCH=$(git branch --show-current)" >> $GITHUB_ENV

      - name: Update lock file
        if: env.CURRENT_BRANCH == 'changeset-release/main'
        run: pnpm install --lockfile-only

      - name: Commit lock file
        if: env.CURRENT_BRANCH == 'changeset-release/main'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'chore: update lock file'
          branch: changeset-release/main
